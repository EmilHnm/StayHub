@{
    ViewData["Title"] = "Search Results";
    @model main_project.Models.ViewModels.VM_Pagination<Hostel>;
    var types = ViewData["accommodationTypes"] as ICollection<AccommodationType> ?? new List<AccommodationType>();
}
@{
    var hasPreviousPage = Model.HasPreviousPage() ? "" : "opacity-50 pointer-events-none";
    var hasNextPage = Model.HasNextPage() ? "" : "opacity-50 pointer-events-none";
}

<div class="mt-10">
    <h1 class="text-md sm:text-xl md:text-2xl w-11/12 mx-auto text-center font-bold text-purple-700">
        Tìm Kiếm Nhà Trọ</h1>
    <div class="relative rounded-xl shadow-md shadow-purple-700 px-10 py-6 mb-20 mx-auto">
        <form method="get" asp-action="Index" asp-controller="Hostel"
            class="flex flex-col md:flex-row items-center gap-3 md:gap-10 ">
            <div class="w-full flex-1">
                <label for="" class="font-bold text-lg text-purple-600">Từ khóa</label>
                <input type="text" placeholder="Nhập từ khóa" name="query" value='@ViewData["query"]'
                    class="flex w-full h-10 px-3 py-2 text-sm bg-white border rounded-md border-neutral-300 ring-offset-background placeholder:text-neutral-500 focus:border-neutral-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neutral-400 disabled:cursor-not-allowed disabled:opacity-50" />
            </div>
            <div class="w-full flex-1">
                <label class="font-bold text-lg text-purple-600">Loại nhà trọ</label>
                <div x-data="select([
                @foreach (var type in types)
                {
                    @:{ title: '@type.Name', value: '@type.Id', disabled: false },
                }
            ], @ViewData["type"])" x-on:keydown.escape="if(selectOpen){ selectOpen=false; }"
                    x-on:keydown.down="if(selectOpen){ selectableItemActiveNext(); } else { selectOpen=true; } event.preventDefault();"
                    x-on:keydown.up="if(selectOpen){ selectableItemActivePrevious(); } else { selectOpen=true; } event.preventDefault();"
                    x-on:keydown.enter="selectedItem=selectableItemActive; selectOpen=false;"
                    x-on:keydown="selectKeydown($event);" class="relative w-full flex-1">
                    <button x-ref="selectButton" x-on:click="selectOpen=!selectOpen" type="button"
                        :class="{ 'focus:ring-2 focus:ring-offset-2 focus:ring-neutral-400' : !selectOpen }"
                        class="relative min-h-[38px] flex items-center justify-between w-full py-2 pl-3 pr-10 text-left bg-white border rounded-md shadow-sm cursor-default border-neutral-200/70 focus:outline-none  text-sm">
                        <span x-text="selectedItem ? selectedItem.title : 'Select Item'" class="truncate">Select
                            Item</span>
                        <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                                aria-hidden="true" class="w-5 h-5 text-gray-400">
                                <path fill-rule="evenodd"
                                    d="M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z"
                                    clip-rule="evenodd"></path>
                            </svg>
                        </span>
                    </button>

                    <input type="hidden" name="type" :value="selectedItem ? selectedItem.value : null">
                    <template x-if="selectableItems.length">
                        <ul x-show="selectOpen" x-ref="selectableItemsList" x-on:click.away="selectOpen = false"
                            x-transition:enter="transition ease-out duration-50"
                            x-transition:enter-start="opacity-0 -translate-y-1" x-transition:enter-end="opacity-100"
                            :class="{ 'bottom-0 mb-10' : selectDropdownPosition == 'top', 'top-0 mt-10' : selectDropdownPosition == 'bottom' }"
                            class="absolute w-full py-1 mt-1 overflow-auto text-sm bg-white rounded-md shadow-md max-h-56 ring-1 ring-black ring-opacity-5 z-10 focus:outline-none"
                            x-cloak>

                            <template x-for="(item, index) in selectableItems" :key="index">
                                <li x-on:click="selectedItem=item; selectOpen=false; $refs.selectButton.focus();"
                                    :id="item.value + '-' + selectId" :data-disabled="item.disabled"
                                    :class="{ 'bg-neutral-100 text-gray-900' : selectableItemIsActive(item), '' : !selectableItemIsActive(item) }"
                                    x-on:mousemove="selectableItemActive=item"
                                    class="relative flex items-center h-full py-2 pl-8 text-gray-700 cursor-pointer select-none data-[disabled]:opacity-50 data-[disabled]:pointer-events-none">
                                    <svg x-show="selectedItem.value==item.value"
                                        class="absolute left-0 w-4 h-4 ml-2 stroke-current text-neutral-400"
                                        xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
                                        stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                        stroke-linejoin="round">
                                        <polyline points="20 6 9 17 4 12"></polyline>
                                    </svg>
                                    <span class="block font-medium truncate" x-html="item.title"></span>
                                </li>
                            </template>
                        </ul>
                    </template>
                </div>
            </div>
            <div class="">
                <button type="submit"
                    class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide mt-4 text-white transition-colors duration-200 rounded-md bg-purple-950 hover:bg-purple-900 focus:ring-2 focus:ring-offset-2 focus:ring-neutral-900 focus:shadow-outline focus:outline-none">
                    Tìm kiếm
                </button>
            </div>
        </form>
    </div>
</div>

@if (Model.ToList<Hostel>().Count() == 0)
{
    <div class="w-11/12 mx-auto">
    <h2 class="text-lg font-bold text-purple-700 text-center">Không tìm thấy kết quả nào</h2>
</div>
}
else
{
    <div class="w-11/12 mx-auto mb-10">
    <h2 class="text-lg font-bold text-purple-700 text-center">Kết quả tìm kiếm</h2>
</div>
    <div class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 mb-4">
    @foreach (var hostel in Model.ToList<Hostel>())
        {
            <div class="rounded-lg overflow-hidden border border-neutral-200/60 bg-white text-neutral-700 shadow-sm w-full">
                <div class="relative">
                    <img src='@(hostel.HostelImages?.Count() > 0 ? hostel.HostelImages.First().ImageUrl : "https://nhatro.duytan.edu.vn/Content/Home/images/image_logo.jpg")'
                        class="w-full max-h-40 object-contain" />
                </div>
                <div class="p-7">
                    <h2
                        class="mb-2 text-xl font-bold leading-none tracking-tight whitespace-nowrap overflow-hidden text-ellipsis">
                        @hostel.Name</h2>
                    <p class="mb-2 text-neutral-500 line-clamp-2">@hostel.Address</p>
                    <p class="mb-5 text-lg font-bold text-purple-500">@hostel.Fee VNĐ</p>
                    <a asp-area="" asp-controller="Hostel" asp-action="Details" asp-route-id="@hostel.Id"
                        class="inline-flex items-center justify-center w-full h-10 px-4 py-2 text-sm font-medium text-white transition-colors rounded-md focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none bg-neutral-950 hover:bg-neutral-950/90 cursor-pointer">Xem
                        Chi tiết</a>
                </div>
            </div>
        }
    </div>

    <div class="flex flex-col md:flex-row items-center justify-between w-full h-16 px-3 border-t border-neutral-200">
    <p class="pl-2 text-sm text-gray-700">Showing <span class="font-medium">@(Model.Page * Model.ItemsPerPage
            - Model.ItemsPerPage + 1)</span> to
            <span class="font-medium">@(Model.Page * Model.ItemsPerPage - Model.ItemsPerPage + Model.Count())</span> of
            <span class="font-medium">@Model.TotalItems</span> results
        </p>
        <nav>
            <ul
                class="flex items-center text-sm leading-tight bg-white border divide-x rounded h-9 text-neutral-500 divide-neutral-200 border-neutral-200">
                <li class="h-full">
                    <a href="?query=@ViewData["query"]&type=@ViewData["type"]&page=1"
                        class="relative inline-flex items-center h-full px-3 ml-0 rounded-l group hover:text-neutral-900 text-center">
                        <span>Trang đầu</span>
                    </a>
                </li>

                <li class="h-full">
                    <a href="?query=@ViewData["query"]&type=@ViewData["type"]&page=@(Model.Page - 1)"
                        class="relative inline-flex items-center h-full px-3 rounded group hover:text-neutral-900 text-center @hasPreviousPage">
                        <span>Trang trước</span>
                    </a>
                </li>

                @foreach (var pageIndex in Model.GetRange())
                {
                    <li class="h-full">
                        <a href="?query=@ViewData["query"]&type=@ViewData["type"]&page=@pageIndex"
                            class='relative inline-flex items-center h-full px-3 rounded group cursor-pointer hover:text-neutral-900 text-center @(pageIndex == Model.Page ? "bg-purple-200" : "")'>
                            <span>@pageIndex</span>
                        </a>
                    </li>
                }
                <li class="h-full">
                    <a href="?query=@ViewData["query"]&type=@ViewData["type"]&page=@(Model.Page + 1)"
                        class="relative inline-flex items-center h-full px-3 rounded group hover:text-neutral-900 text-center @hasNextPage">
                        <span>Trang tiếp</span>
                    </a>
                </li>
                <li class="h-full">
                    <a href="?query=@ViewData["query"]&type=@ViewData["type"]&page=@(Model.TotalPages)"
                        class="relative inline-flex items-center h-full px-3 rounded-r group hover:text-neutral-900 text-center">
                        <span>Trang cuối</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
}